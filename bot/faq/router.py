from aiogram import F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.utils.chat_action import ChatActionSender
from loguru import logger
from aiogram.types import Message, CallbackQuery
from aiogram.dispatcher.router import Router
from aiogram.exceptions import TelegramBadRequest

from bot.database import connection
from bot.faq.dao import QuestionsDAO
from bot.faq.keyboards.inline_kb import faq_inline_keyboard
from bot.faq.schemas import QuestionFilter
from bot.faq.utils import update_cache
from bot.users.keyboards.markup_kb import main_kb

faq_router = Router()
# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∫—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤
questions_cache = {}


class Answering(StatesGroup):
    check = State()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã '/faq' –∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π'
@faq_router.message(Command('faq'))
@faq_router.message(F.text.contains('–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π'))
@connection()
async def faq_start(message: Message, session, state: FSMContext, **kwargs) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã '/faq' –∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π'. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ —á–∞—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏.

    –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∫—ç—à–∏—Ä—É–µ—Ç –∏—Ö –≤ –ø–∞–º—è—Ç—å. –ó–∞—Ç–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
    —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–æ–ø—Ä–æ—Å–æ–≤.

    Args:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
        session: –°–µ—Å—Å–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
        state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        **kwargs: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–µ —á–µ—Ä–µ–∑ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä.

    Returns:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è, –Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

    Raises:
        Exception: –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π.
    """
    try:
        await state.clear()

        # –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
        async with ChatActionSender.typing(bot=message.bot, chat_id=message.chat.id):
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            questions_filter = QuestionFilter()
            questions_answers = await QuestionsDAO.find_all(session=session, filters=questions_filter)

            # –ö—ç—à–∏—Ä—É–µ–º –≤–æ–ø—Ä–æ—Å—ã –≤ –ø–∞–º—è—Ç–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
            update_cache(questions_cache, {q.id: q for q in questions_answers})

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–∞–º–∏
            await message.answer("–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã:", reply_markup=faq_inline_keyboard(list(questions_cache.values())))
            await state.set_state(Answering.check)

    except TelegramBadRequest as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É Telegram
        logger.error(f"Telegram error –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /faq: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.")
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ–±—â–∏–µ –æ—à–∏–±–∫–∏
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /faq: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å
@faq_router.callback_query(F.data.startswith('qst_'), Answering.check)
async def faq_callback(call: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–ª–±–µ–∫-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –∏–∑ —Å–ø–∏—Å–∫–∞.

    –ü–æ–ª—É—á–∞–µ—Ç ID –≤–æ–ø—Ä–æ—Å–∞ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª–±–µ–∫–∞, –∏–∑–≤–ª–µ–∫–∞–µ—Ç –µ–≥–æ –∏–∑ –∫—ç—à–∞
    –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –≤ —Ç–æ–º –≤–∏–¥–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω –±—ã–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.

    –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –Ω–µ—Ç –≤ –∫—ç—à–µ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
    –æ —Ç–æ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –í —Å–ª—É—á–∞–µ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
    —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.

    Args:
        call (CallbackQuery): –ö–æ–ª–ª–±–µ–∫-–∑–∞–ø—Ä–æ—Å, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.

    Returns:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–π, –Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –≤–æ–ø—Ä–æ—Å.

    Raises:
        TelegramBadRequest: –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–µ–∫—Å—Ç –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è).
        Exception: –í —Å–ª—É—á–∞–µ –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.
    """
    try:
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
        await call.answer(text="–°–º–æ—Ç—Ä—é", show_alert=False)

        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –≤–æ–ø—Ä–æ—Å–∞ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª–±–µ–∫–∞
        qst_id: int = int(call.data.replace('qst_', ''))

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å–∞ –∏–∑ –∫—ç—à–∞
        qst_data: QuestionsDAO = questions_cache.get(qst_id)

        if qst_data:
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å–∞ –≤ —Å–ª–æ–≤–∞—Ä—å
            qst_data_dict = qst_data.to_dict()
            msg_text = f'–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å: {qst_data_dict["question"]}\n\n' \
                       f'<b>{qst_data_dict["answer"]}</b>\n\n' \
                       f'–í—ã–±–µ—Ä–∏ –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å:'

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å —Ç–µ–∫—É—â–∏–º
            current_text: str = call.message.text
            if current_text != msg_text:
                await call.message.edit_text(msg_text, reply_markup=faq_inline_keyboard(list(questions_cache.values())))

        else:
            await call.message.answer("–û—Ç–≤–µ—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    except TelegramBadRequest as e:
        # –≠—Ç–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–µ–∫—Å—Ç –æ—Å—Ç–∞–ª—Å—è —Ç–∞–∫–∏–º –∂–µ)
        logger.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        await call.message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞–∑–∞–¥ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
@faq_router.callback_query(F.data.startswith('back_home'), Answering.check)
async def faq_main_menu(call: CallbackQuery, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–ª–±–µ–∫-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.

    –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥", –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –≤—ã–±–æ—Ä–∞ –¥—Ä—É–≥–∏—Ö –æ–ø—Ü–∏–π.
    –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏.

    Args:
        call (CallbackQuery): –ö–æ–ª–ª–±–µ–∫-–∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–∞–Ω–Ω—ã–µ –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ.
        state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Returns:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è, –∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –º–µ–Ω—é –∏ –æ—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Raises:
        Exception: –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π.
    """
    try:
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω
        await call.answer()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –º–µ–Ω—é
        await call.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é üëá", reply_markup=main_kb())

        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await state.clear()

    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: {e}")

        # –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± –æ—à–∏–±–∫–µ
        await call.message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
