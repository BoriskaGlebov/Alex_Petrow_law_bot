import json

from aiogram import F
from aiogram.dispatcher.router import Router
from aiogram.filters import Command
from aiogram.types import CallbackQuery, LabeledPrice, Message, PreCheckoutQuery
from sqlalchemy.ext.asyncio import AsyncSession

import bot.application_form.dao
from bot.application_form.keyboards.inline_kb import product_kb
from bot.config import bot
from bot.database import connection

payment_router = Router()

# class CheckForm(StatesGroup):
#     age = State()
#     resident = State()

PROVIDER_TOKEN = "381764678:TEST:116392"


@payment_router.message(Command("pay"))
@payment_router.message(F.text.contains("–í–Ω–µ—Å–µ–Ω–∏–µ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã"))
@connection()
async def page_catalog_products(message: Message, session):
    await message.answer(f"–í –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ö–∞–∫–∏—Ö-—Ç–æ  —Ç–æ–≤–∞—Ä–æ–≤.")
    product_text = (
        f"üì¶ <b>–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:</b> –¢–æ–≤–∞—Ä1\n\n"
        f"üí∞ <b>–¶–µ–Ω–∞:</b> 1000 —Ä—É–±.\n\n"
        f"üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>\n<i>–í–æ —Ç—É—Ç –∫–∞–∫–æ–µ —Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞</i>\n\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
    )
    await message.answer(product_text, reply_markup=product_kb(1, 1000))


@payment_router.callback_query(F.data.startswith("buy_"))
@connection()
async def process_about(call: CallbackQuery, session: AsyncSession):
    _, product_id, price = call.data.split("_")
    (
        await bot.send_invoice(
            chat_id=call.from_user.id,
            title="–û–ø–ª–∞—Ç–∞ —Ç–æ–≤–∞—Ä–∞",
            description="–û–ø–ª–∞—Ç–∞ —Å –ø—Ä–æ–±–∏—Ç–∏–µ–º —á–µ–∫–∞",
            payload="order_12345",
            provider_token=PROVIDER_TOKEN,
            currency="rub",
            prices=[LabeledPrice(label="–¢–æ–≤–∞—Ä", amount=10000)],  # 100 —Ä—É–±
            provider_data=json.dumps(
                {
                    "receipt": {
                        "customer": {
                            "email": "test@example.com"  # –ò–ª–∏ phone: "+79990000000"
                        },
                        "items": [
                            {
                                "description": "–¶–∏—Ñ—Ä–æ–≤–æ–π —Ç–æ–≤–∞—Ä",
                                "quantity": "1.00",
                                "amount": {"value": "100.00", "currency": "RUB"},
                                "vat_code": "1",  # 1 ‚Äì –ë–µ–∑ –ù–î–°, 2 ‚Äì –ù–î–° 10%, 3 ‚Äì –ù–î–° 20%
                                "payment_mode": "full_payment",
                                "payment_subject": "service",
                            }
                        ],
                    }
                }
            ),
        ),
    )
    await call.message.delete()


#
@payment_router.pre_checkout_query(lambda query: True)
async def pre_checkout_query(pre_checkout_q: PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_q.id, ok=True)


@payment_router.message()
async def process_successful_payment(message: Message):
    if message.successful_payment:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
        payload = message.successful_payment.invoice_payload
        # –í—ã–ø–æ–ª–Ω—è–π—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
        await message.answer("–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω—É
        await bot.send_message(
            chat_id=439653349, text=f"–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! Payload: {payload}"
        )


# @user_router.message(F.text, CheckForm.resident)
# async def mistakes_handler_user(message: Message, state: FSMContext) -> None:
#     """
#     –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ, –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ —Ä–∞–º–∫–∞—Ö
#     —Ñ–æ—Ä–º—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–æ–∑—Ä–∞—Å—Ç –∏ –º–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞), –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏.
#
#     –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é `mistakes_handler` –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –æ—à–∏–±–æ–∫,
#     –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã.
#
#     –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
#     ----------
#     message : Message
#         –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–≤–æ–¥. –í–∫–ª—é—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã
#         –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ —Ä–∞–º–∫–∞—Ö –≤–≤–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–æ–∑—Ä–∞—Å—Ç –∏–ª–∏ –º–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞).
#
#     state : FSMContext
#         –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π (FSM) –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
#         –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤–≤–æ–¥–∞ —Ñ–æ—Ä–º—ã.
#
#     –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
#     ----------------------
#     None
#         –§—É–Ω–∫—Ü–∏—è –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã ‚Äî –æ–±—Ä–∞–±–æ—Ç–∫—É
#         –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫—É —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
#
#     –õ–æ–≥–∏–∫–∞:
#     -------
#     - –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è–º –≤–≤–æ–¥–∞ —Ñ–æ—Ä–º—ã:
#       `CheckForm.age` –∏ `CheckForm.resident`.
#     - –û–Ω –ø–µ—Ä–µ–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ —Ñ—É–Ω–∫—Ü–∏—é `mistakes_handler` –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π
#       –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤–≤–æ–¥–∞, —Ç–∞–∫–∏—Ö –∫–∞–∫ –Ω–µ–≤–µ—Ä–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –∏–ª–∏ –º–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞.
#     """
#     await mistakes_handler(message=message, bot=bot, state=state)
