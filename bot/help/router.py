# TODO –ü–æ–∫–∞ –Ω–µ—Ç —Ç–æ—á–Ω–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥ –∏ –æ–ø–∏—Å–∞–Ω–∏—è –±—É–¥–µ—Ç —Ç–∞–∫ , –ø–æ—Ç–æ–º –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –±—É–¥—É—Ç –¥–æ–ø —Å–æ–æ–±—â–µ–Ω–∏—è
from aiogram.filters import CommandObject, CommandStart, Command
from loguru import logger
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.dispatcher.router import Router
from bot.database import connection
from bot.users.dao import UserDAO
from bot.users.schemas import TelegramIDModel, UserModel
from bot.users.utils import get_refer_id_or_none
from bot.utils.commands import commands

help_router = Router()

#
# @help_router.message(Command('help'))
# async def help_start(message: Message, command: CommandObject, **kwargs) -> None:
#     """
#     –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è Telegram-–±–æ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö,
#     –∏ –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–∏–≤—è–∑—ã–≤–∞—è –µ–≥–æ –∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–º—É ID (–µ—Å–ª–∏ –æ–Ω –ø–µ—Ä–µ–¥–∞–Ω).
#
#     Args:
#         message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –±–æ—Ç—É.
#         command (CommandObject): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ –∏ –µ–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö.
#         session: –°–µ—Å—Å–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
#         **kwargs: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ã —á–µ—Ä–µ–∑ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä.
#
#     Returns:
#         None: –§—É–Ω–∫—Ü–∏—è –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è, –Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
#
#     Raises:
#         Exception: –ï—Å–ª–∏ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –æ—à–∏–±–∫–∞, –æ–Ω–∞ –±—É–¥–µ—Ç –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞ –≤ –ª–æ–≥–µ.
#     """
#     try:
#         # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
#         user_id = message.from_user.id
#
#         # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
#         user_info = await UserDAO.find_one_or_none(session=session,
#                                                    filters=TelegramIDModel(telegram_id=user_id))
#
#         # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
#         if user_info:
#             await message.answer(f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ")
#             return
#
#         # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π ID, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö –∫–æ–º–∞–Ω–¥—ã
#         ref_id = get_refer_id_or_none(command_args=command.args, user_id=user_id)
#
#         # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
#         values = UserModel(telegram_id=user_id,
#                            username=message.from_user.username,
#                            first_name=message.from_user.first_name,
#                            last_name=message.from_user.last_name,
#                            referral_id=ref_id)
#         await UserDAO.add(session=session, values=values)
#
#         # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–ª–∏—á–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ ID
#         ref_message = f" –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω—ã –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å ID {ref_id}" if ref_id else ""
#         msg = f"üéâ <b>–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!{ref_message}</b>."
#
#         # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
#         await message.answer(msg)
#
#     except Exception as e:
#         # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –≤–æ–∑–Ω–∏–∫–ª–∞
#         logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}: {e}")
#         await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.")


@help_router.message(Command('help'))
async def help_cmd(message: Message):
    """–ö–Ω–æ–ø–∫–∞ –ø–æ–º–æ—â–∏"""
    logger.debug(f'{help_cmd.__name__} - –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –ø–æ–º–æ—â–∏')
    text = [f'{el.command} - {el.description}' for el in commands]
    # if not message.from_user.username == 'BorisisTheBlade':
    #     text = [f'{el.command} - {el.description}' for el in main_menu_commands[:-1]]
    # else:
    #     text = [f'{el.command} - {el.description}' for el in main_menu_commands]

    await message.answer(text='\n'.join(text), reply_markup=ReplyKeyboardRemove())
    logger.info(f'{help_cmd.__name__} - –∫–Ω–æ–ø–∫–∞ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∞')