import re
from typing import Optional

from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove

from bot.application_form.router import ApplicationForm
from bot.users.dao import UserDAO
from bot.users.keyboards.inline_kb import approve_keyboard
from bot.users.keyboards.markup_kb import phone_kb
from bot.users.schemas import TelegramIDModel, UpdateNumberSchema
from bot.users.utils import normalize_phone_number


def extract_number(text: str) -> Optional[int]:
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –∏–∑ —Å—Ç—Ä–æ–∫–∏.

    –§—É–Ω–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–µ—Ä–≤–æ–≥–æ —á–∏—Å–ª–∞ –≤ —Ç–µ–∫—Å—Ç–µ.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤–æ–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –≤ –≤–∏–¥–µ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞, –ª–∏–±–æ None, –µ—Å–ª–∏ —á–∏—Å–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.

    Args:
        text (str): –°—Ç—Ä–æ–∫–∞, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –∏–∑–≤–ª–µ—á–µ–Ω–æ —á–∏—Å–ª–æ.

    Returns:
        Optional[int]: –ü–µ—Ä–≤–æ–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –≤ —Å—Ç—Ä–æ–∫–µ –∏–ª–∏ None, –µ—Å–ª–∏ —á–∏—Å–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.

    Example:
        extract_number("–¶–µ–Ω–∞: 150 —Ä—É–±–ª–µ–π") -> 150
        extract_number("–ù–µ—Ç —á–∏—Å–µ–ª –∑–¥–µ—Å—å") -> None
    """
    match = re.search(r"\b(\d+)\b", text)
    if match:
        return int(match.group(1))
    else:
        return None


async def handle_contact(message: Message, state: FSMContext, session) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–∞–∫ –∫–Ω–æ–ø–∫—É –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä–∞, —Ç–∞–∫ –∏ –≤–≤–æ–¥ –≤—Ä—É—á–Ω—É—é.

    –¢—Ä–µ–±—É–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX –∏–ª–∏ 8XXXXXXXXXX.
    """

    user_id = message.from_user.id
    if message.contact:  # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –ø—Ä–∏—à–µ–ª —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É
        phone_number = message.contact.phone_number
    else:  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É—é
        phone_number = message.text.strip()
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –Ω–æ–º–µ—Ä–∞
        phone_pattern = re.compile(
            r"^(\+7|8)?\d{10}$"
        )  # –†–∞–∑—Ä–µ—à–∞–µ—Ç +7XXXXXXXXXX –∏–ª–∏ 8XXXXXXXXXX
        if not phone_pattern.match(phone_number):
            await message.answer(
                "–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX –∏–ª–∏ 8XXXXXXXXXX.",
                reply_markup=phone_kb(),
            )
            return

    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –Ω–æ–º–µ—Ä (–¥–æ–±–∞–≤–ª—è–µ–º +7, –µ—Å–ª–∏ –Ω–∞–¥–æ)
    normalized_phone = normalize_phone_number(phone_number)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î
    existing_user = await UserDAO.find_one_or_none(
        session=session, filters=TelegramIDModel(telegram_id=user_id)
    )

    if existing_user and (existing_user.phone_number is None):
        await UserDAO.update(
            filters=TelegramIDModel(telegram_id=user_id),
            values=UpdateNumberSchema(phone_number=normalized_phone),
            session=session,
        )
        await message.answer(
            f"–°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä {normalized_phone} —Å–æ—Ö—Ä–∞–Ω–µ–Ω.",
            reply_markup=ReplyKeyboardRemove(),
        )

        await message.answer(
            "–í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å üìù –∑–∞—è–≤–∫—É –Ω–∞ –≤—ã–≤–æ–¥ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤?",
            reply_markup=approve_keyboard(
                "–î–∞", "–ù–µ—Ç"
            ),  # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏
        )
        await state.set_state(ApplicationForm.approve_work)
    else:
        await message.answer("–û—à–∏–±–∫–∞: –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")